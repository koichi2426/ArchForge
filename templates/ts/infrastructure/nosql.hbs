import { NoSQL, NoSQLSession } from '../../adapter/repository/nosql';

export class BaseNoSQL implements NoSQL {
  constructor(
    private readonly connectionString: string,
    private readonly options?: any
  ) {}

  async connect(): Promise<void> {
    // データベース接続の実装をお願いします。
  }

  async disconnect(): Promise<void> {
    // データベース切断の実装をお願いします。
  }

  async Store<T>(ctx: unknown, collection: string, data: T): Promise<void> {
    // データ保存の実装をお願いします。
  }

  async Update<T>(ctx: unknown, collection: string, filter: Partial<T>, update: Partial<T>): Promise<void> {
    // データ更新の実装をお願いします。
  }

  async FindAll<T>(ctx: unknown, collection: string, filter: Partial<T>): Promise<T[]> {
    // 複数件取得の実装をお願いします。
  }

  async FindOne<T>(
    ctx: unknown,
    collection: string,
    filter: Partial<T>,
    options?: Record<string, any>
  ): Promise<T | null> {
    // 1件取得の実装をお願いします。
  }

  async StartSession(): Promise<NoSQLSession> {
    // セッション開始の実装をお願いします。
  }
}

export class BaseNoSQLSession implements NoSQLSession {
  async WithTransaction(fn: (ctx: unknown) => Promise<void>): Promise<void> {
    // トランザクション実行の実装をお願いします。
  }

  EndSession(ctx: unknown): void {
    // セッション終了の実装をお願いします。
  }
} 